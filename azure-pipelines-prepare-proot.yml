trigger:
  branches:
    include:
    - master
  paths:
    include:
    - 'build-tools/Prepare-proot.sh'

jobs:
- job: Prepare
  pool:
    vmImage: 'ubuntu-20.04'
  timeoutInMinutes: 360
  strategy:
    matrix:
      'FULL':
        PREPARE_OS_MODE: "BIG"
        XZ: ""
      'MICRO':
        PREPARE_OS_MODE: "MICRO"
        XZ: "-micro"

  steps:
  - script: |
        sudo apt-get update -qq || true
        sudo apt-get install sshpass rsync -y -qq | { grep Setting || true; }
        set -e
        mkdir -p ~/.ssh; printf "Host *\n   StrictHostKeyChecking no\n   UserKnownHostsFile=/dev/null" > ~/.ssh/config

        cd build-tools
        sudo -E bash -c "export SYSTEM_ARTIFACTSDIRECTORY=$SYSTEM_ARTIFACTSDIRECTORY; bash -e Prepare-proot.sh"
        sudo chown -R $(whoami) $SYSTEM_ARTIFACTSDIRECTORY

        cd $SYSTEM_ARTIFACTSDIRECTORY
        echo "DEPLOY IMAGES"
        ls -la
        sshpass -p "$PASSWORD" rsync -r . "${LOGIN}@frs.sourceforge.net:/home/frs/p/debian-vm/termux-images"
    displayName: 'Batch of images'
    env:
        PASSWORD: $(SECRET_PASSWORD)
        LOGIN: $(SECRET_LOGIN)

  - task: PublishBuildArtifacts@1
    condition: succeededOrFailed()
    displayName: 'Publish'
    inputs:
      pathtoPublish: '$(System.ARTIFACTSDIRECTORY)'
      artifactName: 'Deploy-it-by-$(Agent.JobName)'

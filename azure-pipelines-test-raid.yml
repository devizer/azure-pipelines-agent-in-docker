variables:
  COMPRESSION_LEVEL: 1

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - 'azure-pipelines-test-raid.yml'
    exclude:
    - '**'

jobs:

- job: Raid
  pool:
    vmImage: '$(IMAGE)'
  timeoutInMinutes: 13
  strategy:
    maxParallel: 12
    matrix:
      'BTRFS-C On 18.04':
        IMAGE: 'ubuntu-18.04'
        FS: BTRFS-Compressed
      'BTRFS-C On 20.04':
        IMAGE: 'ubuntu-20.04'
        FS: BTRFS-Compressed
      'BTRFS-C On 22.04':
        IMAGE: 'ubuntu-22.04'
        FS: BTRFS-Compressed

      'BTRFS On 18.04':
        IMAGE: 'ubuntu-18.04'
        FS: BTRFS
      'BTRFS On 20.04':
        IMAGE: 'ubuntu-20.04'
        FS: BTRFS
      'BTRFS On 22.04':
        IMAGE: 'ubuntu-22.04'
        FS: BTRFS

      'EXT2 On 18.04':
        IMAGE: 'ubuntu-18.04'
        FS: EXT2
      'EXT2 On 20.04':
        IMAGE: 'ubuntu-20.04'
        FS: EXT2
      'EXT2 On 22.04':
        IMAGE: 'ubuntu-22.04'
        FS: EXT2

      'EXT4 On 18.04':
        IMAGE: 'ubuntu-18.04'
        FS: EXT4
      'EXT4 On 20.04':
        IMAGE: 'ubuntu-20.04'
        FS: EXT4
      'EXT4 On 22.04':
        IMAGE: 'ubuntu-22.04'
        FS: EXT4

  steps:
  - bash: |
      echo "uname -s: [$(uname -s)]"
      script=https://raw.githubusercontent.com/devizer/test-and-build/master/install-build-tools-bundle.sh; (wget -q -nv --no-check-certificate -O - $script 2>/dev/null || curl -ksSL $script) | bash >/dev/null
      Say --Reset-Stopwatch
      Say "CPU: $(Get-CpuName)"
      Say "lzop: [$(lzop --version | tr '\n' ' ')]"
      Say "lz4: [$(lz4 --version | tr '\n' ' ')]"

      swapon
      sudo mount | sort > $SYSTEM_ARTIFACTSDIRECTORY/mount.txt

      Say "jq: [$(command -v jq)]"
      Say "yq: [$(command -v yq)]"
      Say "cat /etc/docker/daemon.json"
      cat /etc/docker/daemon.json

      # LOOP | BLOCK
      export SECOND_DISK_MODE=LOOP

      export RESET_FOLDERS_TO_RAID="/var/lib/apt;/transient-builds;/var/cache/apt;$SYSTEM_ARTIFACTSDIRECTORY;/tmp;/var/tmp;"

      # on|off
      export LOOP_DIRECT_IO=off
      export MOVE_DOCKER_TO_RAID=True
      export FS
      url=https://raw.githubusercontent.com/devizer/glist/master/Raid0-on-Azure-Pipelines-Linux.sh; (wget -q -nv --no-check-certificate -O - $url 2>/dev/null || curl -ksSL $url) | bash

      Say "Size of /var/lib/docker"
      sudo du /var/lib/docker -d 0 -h

      docker pull ubuntu:22.04
      Say "Size of /raid-0/docker-file-system"
      sudo du /raid-0/docker-file-system -d 0 -h

      Say "free -m"
      free -m

      Say "About raid /dev/md0"
      sudo df -h -T | grep "/dev/md0" | sort || true
      sudo mount | grep "/dev/md0" | sort || true


    condition: succeededOrFailed()
    displayName: 'Install Raid-0'

  - task: PublishBuildArtifacts@1
    condition: succeededOrFailed()
    displayName: 'Publish'
    inputs:
      pathtoPublish: '$(System.ARTIFACTSDIRECTORY)'
      artifactName: '$(Agent.JobName)'

